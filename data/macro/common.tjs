function checkLayerName(num, target){
	if (kag.fore.layers[num].Anim_loadParams !== void){
		var name = kag.fore.layers[num].Anim_loadParams.name;
		if (name !== void)
			return (name == target);
		else
			return false;
	}
	else return false;
}

function getStorage(num){
	if (kag.fore.layers[num].Anim_loadParams !== void)
		return kag.fore.layers[num].Anim_loadParams.storage;
	else return "";
}

function fgFocusOff(num){
	var elm = kag.fore.layers[num].Anim_loadParams;
	if(elm !== void){
		elm['mcolor'] = 0x000000;
		elm['mopacity'] = 60;
		elm['opacity'] = kag.fore.layers[num].opacity;
		delete elm.pos;
		kag.fore.layers[num].loadImages(elm);
	}
}

function blurLayers(begin, end){
	for (var i = begin; i < end; i++ ){
		kag.fore.layers[i].doBoxBlur(5, 5);
	}
}

function resetLayer(num){
	var elm = kag.fore.layers[num].Anim_loadParams;
	if(elm !== void){
		elm['opacity'] = kag.fore.layers[num].opacity;
		delete elm.pos;
		delete elm.mcolor;
		delete elm.mopacity;
		kag.fore.layers[num].loadImages(elm);
	}
}

function resetLayers(begin, end){
	for (var i = begin; i < end; i++ ){
		resetLayer(i);
	}	
}

function eraseAllLayers() {
	for (var i = 0; i < kag.fore.layers.count; i++) {
		kag.fore.layers[i].visible = false;
		kag.fore.layers[i].freeImage();
	}
	kag.fore.base.freeImage();
}

function stretchAllLayers(){
	var templayer = new Layer(kag, kag.fore.base);
	for (var i = 0; i < kag.fore.layers.count; i++) {
		templayer.assignImages(kag.fore.layers[i]);
		dm("Layer["+i+"]\n");
		dm(templayer.imageWidth);
		dm(templayer.imageHeight);
		kag.fore.layers[i].stretchCopy(0,0,2*templayer.imageWidth,2*templayer.imageHeight,templayer,0,0,templayer.imageWidth,templayer.imageHeight, stBlackmanSinc);
	}
}